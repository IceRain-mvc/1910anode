(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{267:function(e,t,s){"use strict";s.r(t);var a=s(28),i=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h4",{attrs:{id:"添加远程库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加远程库"}},[e._v("#")]),e._v(" 添加远程库")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("现在的情景是，你已经在本地创建了一个Git仓库后，又想在GitHub创建一个Git仓库，并且让这两个仓库进行远程同步，这样，GitHub上的仓库既可以作为备份，又可以让其他人通过该仓库来协作，真是一举多得。")]),e._v(" "),s("p",[e._v("首先，登陆GitHub，然后，在右上角找到“Create a new repo”按钮，创建一个新的仓库：")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://www.liaoxuefeng.com/files/attachments/919021631860000/0",alt:"github-create-repo-1"}})]),e._v(" "),s("p",[e._v("在Repository name填入"),s("code",[e._v("learngit")]),e._v("，其他保持默认设置，点击“Create repository”按钮，就成功地创建了一个新的Git仓库：")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://www.liaoxuefeng.com/files/attachments/919021652277920/0",alt:"github-create-repo-2"}})]),e._v(" "),s("p",[e._v("目前，在GitHub上的这个"),s("code",[e._v("learngit")]),e._v("仓库还是空的，GitHub告诉我们，可以从这个仓库克隆出新的仓库，也可以把一个已有的本地仓库与之关联，然后，把本地仓库的内容推送到GitHub仓库。")]),e._v(" "),s("p",[e._v("现在，我们根据GitHub的提示，在本地的"),s("code",[e._v("learngit")]),e._v("仓库下运行命令：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ git remote add origin git@github.com:michaelliao/learngit.git\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("请千万注意，把上面的"),s("code",[e._v("michaelliao")]),e._v("替换成你自己的GitHub账户名，否则，你在本地关联的就是我的远程库，关联没有问题，但是你以后推送是推不上去的，因为你的SSH Key公钥不在我的账户列表中。")]),e._v(" "),s("p",[e._v("添加后，远程库的名字就是"),s("code",[e._v("origin")]),e._v("，这是Git默认的叫法，也可以改成别的，但是"),s("code",[e._v("origin")]),e._v("这个名字一看就知道是远程库。")]),e._v(" "),s("p",[e._v("下一步，就可以把本地库的所有内容推送到远程库上：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ git push -u origin master\nCounting objects: 20, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (15/15), done.\nWriting objects: 100% (20/20), 1.64 KiB | 560.00 KiB/s, done.\nTotal 20 (delta 5), reused 0 (delta 0)\nremote: Resolving deltas: 100% (5/5), done.\nTo github.com:michaelliao/learngit.git\n * [new branch]      master -> master\nBranch 'master' set up to track remote branch 'master' from 'origin'.\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br")])]),s("p",[e._v("把本地库的内容推送到远程，用"),s("code",[e._v("git push")]),e._v("命令，实际上是把当前分支"),s("code",[e._v("master")]),e._v("推送到远程。")]),e._v(" "),s("p",[e._v("由于远程库是空的，我们第一次推送"),s("code",[e._v("master")]),e._v("分支时，加上了"),s("code",[e._v("-u")]),e._v("参数，Git不但会把本地的"),s("code",[e._v("master")]),e._v("分支内容推送的远程新的"),s("code",[e._v("master")]),e._v("分支，还会把本地的"),s("code",[e._v("master")]),e._v("分支和远程的"),s("code",[e._v("master")]),e._v("分支关联起来，在以后的推送或者拉取时就可以简化命令。")]),e._v(" "),s("p",[e._v("推送成功后，可以立刻在GitHub页面中看到远程库的内容已经和本地一模一样：")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://www.liaoxuefeng.com/files/attachments/919021675995552/0",alt:"github-repo"}})]),e._v(" "),s("p",[e._v("从现在起，只要本地作了提交，就可以通过命令：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ git push origin master\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("把本地"),s("code",[e._v("master")]),e._v("分支的最新修改推送至GitHub，现在，你就拥有了真正的分布式版本库！")]),e._v(" "),s("h3",{attrs:{id:"ssh警告"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ssh警告"}},[e._v("#")]),e._v(" SSH警告")]),e._v(" "),s("p",[e._v("当你第一次使用Git的"),s("code",[e._v("clone")]),e._v("或者"),s("code",[e._v("push")]),e._v("命令连接GitHub时，会得到一个警告：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("The authenticity of host 'github.com (xx.xx.xx.xx)' can't be established.\nRSA key fingerprint is xx.xx.xx.xx.xx.\nAre you sure you want to continue connecting (yes/no)?\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("这是因为Git使用SSH连接，而SSH连接在第一次验证GitHub服务器的Key时，需要你确认GitHub的Key的指纹信息是否真的来自GitHub的服务器，输入"),s("code",[e._v("yes")]),e._v("回车即可。")]),e._v(" "),s("p",[e._v("Git会输出一个警告，告诉你已经把GitHub的Key添加到本机的一个信任列表里了：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Warning: Permanently added 'github.com' (RSA) to the list of known hosts.\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("这个警告只会出现一次，后面的操作就不会有任何警告了。")]),e._v(" "),s("p",[e._v("如果你实在担心有人冒充GitHub服务器，输入"),s("code",[e._v("yes")]),e._v("前可以对照"),s("a",{attrs:{href:"https://help.github.com/articles/what-are-github-s-ssh-key-fingerprints/",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub的RSA Key的指纹信息"),s("OutboundLink")],1),e._v("是否与SSH连接给出的一致。")]),e._v(" "),s("h3",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[e._v("#")]),e._v(" 小结")]),e._v(" "),s("p",[e._v("要关联一个远程库，使用命令"),s("code",[e._v("git remote add origin git@server-name:path/repo-name.git")]),e._v("；")]),e._v(" "),s("p",[e._v("关联后，使用命令"),s("code",[e._v("git push -u origin master")]),e._v("第一次推送master分支的所有内容；")]),e._v(" "),s("p",[e._v("此后，每次本地提交后，只要有必要，就可以使用命令"),s("code",[e._v("git push origin master")]),e._v("推送最新修改；")]),e._v(" "),s("p",[e._v("分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也就是有没有联网都可以正常工作，而SVN在没有联网的时候是拒绝干活的！当有网络的时候，再把本地提交推送一下就完成了同步，真是太方便了！")])])}),[],!1,null,null,null);t.default=i.exports}}]);